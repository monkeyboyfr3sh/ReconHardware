# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
create_project -in_memory -part xc7z020clg400-1

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_msg_config -source 4 -id {IP_Flow 19-2162} -severity warning -new_severity info
set_property webtalk.parent_dir C:/GitHub/ReconHardware/PynqSoftware/Projects/dynamicXBarMulti/dynamicXBarMulti.cache/wt [current_project]
set_property parent.project_path C:/GitHub/ReconHardware/PynqSoftware/Projects/dynamicXBarMulti/dynamicXBarMulti.xpr [current_project]
set_property XPM_LIBRARIES XPM_CDC [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property board_part tul.com.tw:pynq-z2:part0:1.0 [current_project]
set_property ip_output_repo c:/GitHub/ReconHardware/PynqSoftware/Projects/dynamicXBarMulti/dynamicXBarMulti.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
add_files -quiet C:/GitHub/ReconHardware/PynqSoftware/Projects/dynamicXBarMulti/dynamicXBarMulti.runs/integer_synth_1/multiplyCompute.dcp
set_property used_in_implementation false [get_files C:/GitHub/ReconHardware/PynqSoftware/Projects/dynamicXBarMulti/dynamicXBarMulti.runs/integer_synth_1/multiplyCompute.dcp]
read_xdc hd_reconfig.xdc
set_property used_in_implementation false [get_files hd_reconfig.xdc]
read_verilog C:/GitHub/ReconHardware/PynqSoftware/Sources/definitions.h
set_property file_type "Verilog Header" [get_files C:/GitHub/ReconHardware/PynqSoftware/Sources/definitions.h]
set_property is_global_include true [get_files C:/GitHub/ReconHardware/PynqSoftware/Sources/definitions.h]
read_verilog -library xil_defaultlib {
  C:/GitHub/ReconHardware/PynqSoftware/Sources/General/XBar.v
  C:/GitHub/ReconHardware/PynqSoftware/Sources/Multiplier/dynamicMulti.v
  C:/GitHub/ReconHardware/PynqSoftware/Sources/General/multiplyXBar.v
  C:/GitHub/ReconHardware/PynqSoftware/Sources/General/mux.v
  C:/GitHub/ReconHardware/PynqSoftware/Sources/General/top_wrap.v
}
add_files {{C:/GitHub/ReconHardware/PynqSoftware/Sources/Block Diagrams/ps_Wrap/ps_Wrap.bd}}
set_property used_in_implementation false [get_files -all {{C:/GitHub/ReconHardware/PynqSoftware/Sources/Block Diagrams/ps_Wrap/ps_Wrap_ooc.xdc}}]

add_files {{C:/GitHub/ReconHardware/PynqSoftware/Sources/Block Diagrams/PYNQ_wrap/PYNQ_wrap.bd}}
set_property used_in_implementation false [get_files -all {{c:/GitHub/ReconHardware/PynqSoftware/Sources/Block Diagrams/PYNQ_wrap/ip/PYNQ_wrap_processing_system7_0_0/PYNQ_wrap_processing_system7_0_0.xdc}}]
set_property used_in_implementation false [get_files -all {{c:/GitHub/ReconHardware/PynqSoftware/Sources/Block Diagrams/PYNQ_wrap/ip/PYNQ_wrap_clk_wiz_0_0/PYNQ_wrap_clk_wiz_0_0_board.xdc}}]
set_property used_in_implementation false [get_files -all {{c:/GitHub/ReconHardware/PynqSoftware/Sources/Block Diagrams/PYNQ_wrap/ip/PYNQ_wrap_clk_wiz_0_0/PYNQ_wrap_clk_wiz_0_0.xdc}}]
set_property used_in_implementation false [get_files -all {{c:/GitHub/ReconHardware/PynqSoftware/Sources/Block Diagrams/PYNQ_wrap/ip/PYNQ_wrap_clk_wiz_0_0/PYNQ_wrap_clk_wiz_0_0_ooc.xdc}}]
set_property used_in_implementation false [get_files -all {{C:/GitHub/ReconHardware/PynqSoftware/Sources/Block Diagrams/PYNQ_wrap/PYNQ_wrap_ooc.xdc}}]

# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
read_xdc C:/GitHub/ReconHardware/PynqSoftware/Constraints/dXBM.xdc
set_property used_in_implementation false [get_files C:/GitHub/ReconHardware/PynqSoftware/Constraints/dXBM.xdc]

read_xdc dont_touch.xdc
set_property used_in_implementation false [get_files dont_touch.xdc]
set_param ips.enableIPCacheLiteLoad 1
close [open __synthesis_is_running__ w]

synth_design -top top_wrap -part xc7z020clg400-1


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef top_wrap.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file top_wrap_utilization_synth.rpt -pb top_wrap_utilization_synth.pb"
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
