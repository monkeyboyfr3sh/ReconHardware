#-----------------------------------------------------------
# Vivado v2020.1 (64-bit)
# SW Build 2902540 on Wed May 27 19:54:49 MDT 2020
# IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
# Start of session at: Sat Mar 20 20:42:59 2021
# Process ID: 10576
# Current directory: C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1
# Command line: vivado.exe -log CPE_Wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source CPE_Wrapper.tcl -notrace
# Log file: C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper.vdi
# Journal file: C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1\vivado.jou
#-----------------------------------------------------------
source CPE_Wrapper.tcl -notrace
Command: pr_verify -full_check -initial C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed.dcp -additional C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_routed.dcp -file child_0_impl_1_pr_verify.log
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:02 . Memory (MB): peak = 1072.629 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 2317 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Constraints 18-5170] The checkpoint was created with non-default parameter values which do not match the current Vivado settings.  Mismatching parameters are:
  tcl.collectionResultDisplayLimit
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1905.238 ; gain = 18.102
Restored from archive | CPU: 3.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1905.238 ; gain = 18.102
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.028 . Memory (MB): peak = 1905.238 ; gain = 0.000
INFO: [Project 1-604] Checkpoint was created with Vivado v2020.1 (64-bit) build 2902540
INFO: [Vivado 12-3501] pr_verify C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed.dcp C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_routed.dcp
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:02 . Memory (MB): peak = 2078.398 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 2119 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2535.633 ; gain = 36.246
Restored from archive | CPU: 3.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2535.633 ; gain = 36.246
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.027 . Memory (MB): peak = 2535.633 ; gain = 0.000
INFO: [Project 1-604] Checkpoint was created with Vivado v2020.1 (64-bit) build 2902540
INFO: [Constraints 18-1020] PR Verify Summary:
DCP1: C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed.dcp
  Number of reconfigurable modules compared = 3
  Number of partition pins compared         = 1797
  Number of static tiles compared           = 3742
  Number of static sites compared           = 7523
  Number of static cells compared           = 47609
  Number of static routed nodes compared    = 525915
  Number of static routed pips compared     = 487546

DCP2: C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_routed.dcp
  Number of reconfigurable modules compared = 3
  Number of partition pins compared         = 1797
  Number of static tiles compared           = 3742
  Number of static sites compared           = 7523
  Number of static cells compared           = 47609
  Number of static routed nodes compared    = 525915
  Number of static routed pips compared     = 487546
INFO: [Vivado 12-3253] PR_VERIFY: check points C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed.dcp and C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_routed.dcp are compatible
pr_verify: Time (s): cpu = 00:01:01 ; elapsed = 00:01:03 . Memory (MB): peak = 2692.648 ; gain = 1620.020
Command: open_checkpoint CPE_Wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2692.648 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:02 . Memory (MB): peak = 2692.648 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 2119 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2692.648 ; gain = 0.000
Restored from archive | CPU: 3.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2692.648 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.037 . Memory (MB): peak = 2692.648 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 796 instances were transformed.
  CFGLUT5 => CFGLUT5 (SRL16E, SRLC32E): 564 instances
  RAM16X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM16X1S => RAM32X1S (RAMS32): 81 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 150 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2020.1 (64-bit) build 2902540
open_checkpoint: Time (s): cpu = 00:00:17 ; elapsed = 00:00:18 . Memory (MB): peak = 2692.648 ; gain = 0.000
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/blk_id_fifo.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/blk_id_fifo.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to auto. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-208] The XPM instance: <BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <BD_Wrapper/Convolution_Controller_i/axi_dma_0>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <BD_Wrapper/Convolution_Controller_i/axi_dma_0>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
Command: write_bitstream -force -no_partial_bitfile CPE_Wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2020.1/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDRC-61] SLICEM_5lutO5_C5: Dangling output pin O5 on site SLICE_X94Y90:C5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC PDRC-62] SLICEM_5lutO5_B5: Dangling output pin O5 on site SLICE_X94Y90:B5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC RTSTAT-10] No routable loads: 114 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], genblk1[2].ma/Convolution_Processor/adder/finalAccumulate[19:0], genblk1[1].ma/Convolution_Processor/adder/finalAccumulate[19:0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m03_nodes/m03_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_w_node/inst/mi_handler_m_sc_areset_pipe... and (the first 15 of 74 listed).
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 84 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
Partition "pblock_genblk1[0].ma" Reconfigurable Module "genblk1[0].ma"
Partition "pblock_genblk1[1].ma" Reconfigurable Module "genblk1[1].ma"
Partition "pblock_genblk1[2].ma" Reconfigurable Module "genblk1[2].ma"
INFO: [Vivado 12-4752] Design contains reconfigurable partitions, but no partial bit files will be generated since -no_partial_bitfile option was specified.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./CPE_Wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Sat Mar 20 20:45:07 2021. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2020.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
69 Infos, 84 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:53 ; elapsed = 00:00:44 . Memory (MB): peak = 2692.648 ; gain = 0.000
Command: write_bitstream -force -cell {genblk1[0].ma} genblk1_0_.ma_ma_int_16_partial.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDRC-61] SLICEM_5lutO5_C5: Dangling output pin O5 on site SLICE_X94Y90:C5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC PDRC-62] SLICEM_5lutO5_B5: Dangling output pin O5 on site SLICE_X94Y90:B5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC RTSTAT-10] No routable loads: 114 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], genblk1[2].ma/Convolution_Processor/adder/finalAccumulate[19:0], genblk1[1].ma/Convolution_Processor/adder/finalAccumulate[19:0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m03_nodes/m03_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_w_node/inst/mi_handler_m_sc_areset_pipe... and (the first 15 of 74 listed).
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 84 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
Partition "pblock_genblk1[0].ma" Reconfigurable Module "genblk1[0].ma"
Partition "pblock_genblk1[1].ma" Reconfigurable Module "genblk1[1].ma"
Partition "pblock_genblk1[2].ma" Reconfigurable Module "genblk1[2].ma"
INFO: [Vivado 12-4077] No full design bitstream will be created with the use of the -cell option.
Process Partition "pblock_genblk1[0].ma"
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Partial bitstream contains 3635584 bits.
Writing bitstream ./genblk1_0_.ma_ma_int_16_partial.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Sat Mar 20 20:46:13 2021. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2020.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
82 Infos, 168 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:09 ; elapsed = 00:01:06 . Memory (MB): peak = 2692.648 ; gain = 0.000
Command: write_bitstream -force -cell {genblk1[1].ma} genblk1_1_.ma_ma_int_16_partial.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDRC-61] SLICEM_5lutO5_C5: Dangling output pin O5 on site SLICE_X94Y90:C5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC PDRC-62] SLICEM_5lutO5_B5: Dangling output pin O5 on site SLICE_X94Y90:B5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC RTSTAT-10] No routable loads: 114 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], genblk1[2].ma/Convolution_Processor/adder/finalAccumulate[19:0], genblk1[1].ma/Convolution_Processor/adder/finalAccumulate[19:0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m03_nodes/m03_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_w_node/inst/mi_handler_m_sc_areset_pipe... and (the first 15 of 74 listed).
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 84 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
Partition "pblock_genblk1[0].ma" Reconfigurable Module "genblk1[0].ma"
Partition "pblock_genblk1[1].ma" Reconfigurable Module "genblk1[1].ma"
Partition "pblock_genblk1[2].ma" Reconfigurable Module "genblk1[2].ma"
INFO: [Vivado 12-4077] No full design bitstream will be created with the use of the -cell option.
Process Partition "pblock_genblk1[1].ma"
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Partial bitstream contains 1766976 bits.
Writing bitstream ./genblk1_1_.ma_ma_int_16_partial.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Sat Mar 20 20:47:37 2021. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2020.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
95 Infos, 252 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:24 ; elapsed = 00:01:23 . Memory (MB): peak = 2692.648 ; gain = 0.000
Command: write_bitstream -force -cell {genblk1[2].ma} genblk1_2_.ma_ma_int_16_partial.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDRC-61] SLICEM_5lutO5_C5: Dangling output pin O5 on site SLICE_X94Y90:C5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC PDRC-62] SLICEM_5lutO5_B5: Dangling output pin O5 on site SLICE_X94Y90:B5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC RTSTAT-10] No routable loads: 114 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], genblk1[2].ma/Convolution_Processor/adder/finalAccumulate[19:0], genblk1[1].ma/Convolution_Processor/adder/finalAccumulate[19:0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m03_nodes/m03_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_w_node/inst/mi_handler_m_sc_areset_pipe... and (the first 15 of 74 listed).
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 84 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
Partition "pblock_genblk1[0].ma" Reconfigurable Module "genblk1[0].ma"
Partition "pblock_genblk1[1].ma" Reconfigurable Module "genblk1[1].ma"
Partition "pblock_genblk1[2].ma" Reconfigurable Module "genblk1[2].ma"
INFO: [Vivado 12-4077] No full design bitstream will be created with the use of the -cell option.
Process Partition "pblock_genblk1[2].ma"
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Partial bitstream contains 1766976 bits.
Writing bitstream ./genblk1_2_.ma_ma_int_16_partial.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Sat Mar 20 20:49:20 2021. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2020.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
108 Infos, 336 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:44 ; elapsed = 00:01:43 . Memory (MB): peak = 2692.648 ; gain = 0.000
INFO: [Common 17-206] Exiting Vivado at Sat Mar 20 20:49:21 2021...
