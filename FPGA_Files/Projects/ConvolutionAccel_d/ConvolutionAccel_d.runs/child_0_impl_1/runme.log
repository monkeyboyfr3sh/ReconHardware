
*** Running vivado
    with args -log CPE_Wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source CPE_Wrapper.tcl -notrace



****** Vivado v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:49 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source CPE_Wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/GitHub/ReconHardware/FPGA_Files/Sources/IP_Source/Convolution_Controller_v1.0'.
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/GitHub/ReconHardware/FPGA_Files/Projects/axis_snooper/axis_snooper.srcs/sources_1/new'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2020.1/data/ip'.
WARNING: [IP_Flow 19-4995] The host OS only allows 260 characters in a normal path. The IP cache path is more than 80 characters. If you experience issues with IP caching, please consider changing the IP cache to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. 
Current IP cache path is C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.cache/ip 
Command: link_design -top CPE_Wrapper -part xc7z020clg400-1 -reconfig_partitions {{genblk1[0].ma} {genblk1[1].ma} {genblk1[2].ma}}
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Project 1-454] Reading design checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/ma_int_16_synth_1/ma_int_16.dcp' for cell 'genblk1[0].ma'
INFO: [Project 1-454] Reading design checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/ma_int_16_synth_1/ma_int_16.dcp' for cell 'genblk1[1].ma'
INFO: [Project 1-454] Reading design checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/ma_int_16_synth_1/ma_int_16.dcp' for cell 'genblk1[2].ma'
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 1079.953 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 2119 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed_bb/CPE_Wrapper_board.xdc]
Finished Parsing XDC File [C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed_bb/CPE_Wrapper_board.xdc]
Parsing XDC File [C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed_bb/CPE_Wrapper_early.xdc]
Finished Parsing XDC File [C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed_bb/CPE_Wrapper_early.xdc]
Parsing XDC File [C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed_bb/CPE_Wrapper.xdc]
INFO: [Timing 38-35] Done setting XDC timing constraints. [c:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/.Xil/Vivado-15752-DESKTOP-D9F9TPQ/dbg_hub_CV.0/out/xsdbm_cc_late_late.xdc:7]
all_fanout: Time (s): cpu = 00:00:09 ; elapsed = 00:00:08 . Memory (MB): peak = 1889.023 ; gain = 620.625
Finished Parsing XDC File [C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed_bb/CPE_Wrapper.xdc]
Parsing XDC File [C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed_bb/CPE_Wrapper_late.xdc]
Finished Parsing XDC File [C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed_bb/CPE_Wrapper_late.xdc]
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1949.527 ; gain = 60.504
Restored from archive | CPU: 3.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1949.527 ; gain = 60.504
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_cdc_pntr.rd_pntr_cdc_inst'
INFO: [Vivado 12-3272] Current instance is the top level cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_cdc_pntr.rd_pntr_cdc_inst' of design 'design_1' [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16]
WARNING: [XPM_CDC_GRAY: TCL-1000] The source and destination clocks are the same. 
     Instance: BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_cdc_pntr.rd_pntr_cdc_inst 
  This will add unnecessary latency to the design. Please check the design for the following: 
 1) Manually instantiated XPM_CDC modules: Xilinx recommends that you remove these modules. 
 2) Xilinx IP that contains XPM_CDC modules: Verify the connections to the IP to determine whether you can safely ignore this message.
 [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16]
WARNING: [Vivado_Tcl 4-935] Waiver ID 'CDC-6' is a duplicate and will not be added again. [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:23]
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_cdc_pntr.rd_pntr_cdc_inst'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_cdc_pntr.wr_pntr_cdc_inst'
INFO: [Vivado 12-3272] Current instance is the top level cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_cdc_pntr.wr_pntr_cdc_inst' of design 'design_1' [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16]
WARNING: [XPM_CDC_GRAY: TCL-1000] The source and destination clocks are the same. 
     Instance: BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_cdc_pntr.wr_pntr_cdc_inst 
  This will add unnecessary latency to the design. Please check the design for the following: 
 1) Manually instantiated XPM_CDC modules: Xilinx recommends that you remove these modules. 
 2) Xilinx IP that contains XPM_CDC modules: Verify the connections to the IP to determine whether you can safely ignore this message.
 [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16]
WARNING: [Vivado_Tcl 4-935] Waiver ID 'CDC-6' is a duplicate and will not be added again. [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:23]
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_cdc_pntr.wr_pntr_cdc_inst'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_sync_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/xpm_fifo_rst_inst/gen_rst_ic.rrst_wr_inst'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_sync_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/xpm_fifo_rst_inst/gen_rst_ic.rrst_wr_inst'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_sync_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/xpm_fifo_rst_inst/gen_rst_ic.wrst_rd_inst'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_sync_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/xpm_fifo_rst_inst/gen_rst_ic.wrst_rd_inst'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/blk_id_fifo.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/blk_id_fifo.xpm_fifo_sync_inst'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [C:/Xilinx/Vivado/2020.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.028 . Memory (MB): peak = 1969.309 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 796 instances were transformed.
  CFGLUT5 => CFGLUT5 (SRL16E, SRLC32E): 564 instances
  RAM16X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM16X1S => RAM32X1S (RAMS32): 81 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 150 instances

17 Infos, 5 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:36 ; elapsed = 00:00:37 . Memory (MB): peak = 1969.309 ; gain = 889.355
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 1969.309 ; gain = 0.000

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 2562ce61e

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 1969.309 ; gain = 0.000

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 2562ce61e

Time (s): cpu = 00:00:09 ; elapsed = 00:00:08 . Memory (MB): peak = 2205.953 ; gain = 33.434
INFO: [Opt 31-389] Phase Retarget created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Retarget, 3409 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 26883c84e

Time (s): cpu = 00:00:10 ; elapsed = 00:00:09 . Memory (MB): peak = 2205.953 ; gain = 33.434
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Constant propagation, 101 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 1c407d9aa

Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 2205.953 ; gain = 33.434
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Sweep, 238835 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 1c407d9aa

Time (s): cpu = 00:00:15 ; elapsed = 00:00:14 . Memory (MB): peak = 2205.953 ; gain = 33.434
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.
INFO: [Opt 31-1021] In phase BUFG optimization, 2 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 1c407d9aa

Time (s): cpu = 00:00:16 ; elapsed = 00:00:15 . Memory (MB): peak = 2205.953 ; gain = 33.434
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 1c407d9aa

Time (s): cpu = 00:00:17 ; elapsed = 00:00:16 . Memory (MB): peak = 2205.953 ; gain = 33.434
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 146 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |               0  |               0  |                                           3409  |
|  Constant propagation         |               0  |               0  |                                            101  |
|  Sweep                        |               0  |               0  |                                         238835  |
|  BUFG optimization            |               0  |               0  |                                              2  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                            146  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.092 . Memory (MB): peak = 2205.953 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 2205cf7e0

Time (s): cpu = 00:00:18 ; elapsed = 00:00:17 . Memory (MB): peak = 2205.953 ; gain = 33.434

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-232] Skipping BRAM gating because all BRAMs are in high frequency (i.e. period < 3.12 ns) clock domains.
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 35 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
Ending Power Optimization Task | Checksum: 2205cf7e0

Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 2230.387 ; gain = 24.434

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 2205cf7e0

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2230.387 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.028 . Memory (MB): peak = 2230.387 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 2205cf7e0

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.028 . Memory (MB): peak = 2230.387 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
41 Infos, 5 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:30 ; elapsed = 00:00:27 . Memory (MB): peak = 2230.387 ; gain = 261.078
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:13 ; elapsed = 00:00:03 . Memory (MB): peak = 2230.387 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:21 ; elapsed = 00:00:10 . Memory (MB): peak = 2230.387 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file CPE_Wrapper_drc_opted.rpt -pb CPE_Wrapper_drc_opted.pb -rpx CPE_Wrapper_drc_opted.rpx
Command: report_drc -file CPE_Wrapper_drc_opted.rpt -pb CPE_Wrapper_drc_opted.pb -rpx CPE_Wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_drc_opted.rpt.
report_drc completed successfully
INFO: [Chipscope 16-240] Debug cores have already been implemented
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.028 . Memory (MB): peak = 2274.180 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 13dca9887

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.404 . Memory (MB): peak = 2274.180 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.027 . Memory (MB): peak = 2274.180 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: f1dcdd66

Time (s): cpu = 00:00:08 ; elapsed = 00:00:07 . Memory (MB): peak = 2410.820 ; gain = 136.641

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 167dccb06

Time (s): cpu = 00:00:25 ; elapsed = 00:00:18 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 167dccb06

Time (s): cpu = 00:00:25 ; elapsed = 00:00:18 . Memory (MB): peak = 2533.664 ; gain = 259.484
Phase 1 Placer Initialization | Checksum: 167dccb06

Time (s): cpu = 00:00:25 ; elapsed = 00:00:19 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 1679df174

Time (s): cpu = 00:00:33 ; elapsed = 00:00:23 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 2.2 Global Placement Core

Phase 2.2.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 30 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-775] End 1 Pass. Optimized 15 nets or cells. Created 0 new cell, deleted 15 existing cells and moved 0 existing cell
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-456] No candidate cells for DSP register optimization found in the design.
INFO: [Physopt 32-775] End 2 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-1123] No candidate cells found for Shift Register to Pipeline optimization
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-677] No candidate cells for Shift Register optimization found in the design
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-526] No candidate cells for BRAM register optimization found in the design
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-846] No candidate cells for URAM register optimization found in the design
INFO: [Physopt 32-775] End 2 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-949] No candidate nets found for HD net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.029 . Memory (MB): peak = 2533.664 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |             15  |                    15  |           0  |           1  |  00:00:00  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |          35  |           1  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |             15  |                    15  |          35  |           8  |  00:00:01  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.2.1 Physical Synthesis In Placer | Checksum: 1621758ad

Time (s): cpu = 00:01:05 ; elapsed = 00:00:42 . Memory (MB): peak = 2533.664 ; gain = 259.484
Phase 2.2 Global Placement Core | Checksum: 1ee723531

Time (s): cpu = 00:01:06 ; elapsed = 00:00:43 . Memory (MB): peak = 2533.664 ; gain = 259.484
Phase 2 Global Placement | Checksum: 1ee723531

Time (s): cpu = 00:01:06 ; elapsed = 00:00:43 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1b1c0f69b

Time (s): cpu = 00:01:07 ; elapsed = 00:00:43 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1759ab28e

Time (s): cpu = 00:01:08 ; elapsed = 00:00:44 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1b72b1afd

Time (s): cpu = 00:01:08 ; elapsed = 00:00:44 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 1b72b1afd

Time (s): cpu = 00:01:08 ; elapsed = 00:00:44 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 3.5 Fast Optimization
Phase 3.5 Fast Optimization | Checksum: 20b361e1f

Time (s): cpu = 00:01:15 ; elapsed = 00:00:48 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 3.6 Small Shape Detail Placement
Phase 3.6 Small Shape Detail Placement | Checksum: 18c0d7c54

Time (s): cpu = 00:01:17 ; elapsed = 00:00:50 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 3.7 Re-assign LUT pins
Phase 3.7 Re-assign LUT pins | Checksum: 12111e1e6

Time (s): cpu = 00:01:17 ; elapsed = 00:00:50 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 3.8 Pipeline Register Optimization
Phase 3.8 Pipeline Register Optimization | Checksum: 12111e1e6

Time (s): cpu = 00:01:18 ; elapsed = 00:00:50 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 3.9 Fast Optimization
Phase 3.9 Fast Optimization | Checksum: 18553ab10

Time (s): cpu = 00:01:27 ; elapsed = 00:00:55 . Memory (MB): peak = 2533.664 ; gain = 259.484
Phase 3 Detail Placement | Checksum: 18553ab10

Time (s): cpu = 00:01:27 ; elapsed = 00:00:55 . Memory (MB): peak = 2533.664 ; gain = 259.484

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 1d18b7522

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.232 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 1fe9af6b3

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2536.898 ; gain = 0.000
INFO: [Place 46-56] BUFG insertion identified 0 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 1e1595330

Time (s): cpu = 00:00:04 ; elapsed = 00:00:02 . Memory (MB): peak = 2536.898 ; gain = 0.000
Phase 4.1.1.1 BUFG Insertion | Checksum: 1d18b7522

Time (s): cpu = 00:01:47 ; elapsed = 00:01:08 . Memory (MB): peak = 2536.898 ; gain = 262.719
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.383. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 141baff1d

Time (s): cpu = 00:01:48 ; elapsed = 00:01:10 . Memory (MB): peak = 2536.898 ; gain = 262.719
Phase 4.1 Post Commit Optimization | Checksum: 141baff1d

Time (s): cpu = 00:01:48 ; elapsed = 00:01:10 . Memory (MB): peak = 2536.898 ; gain = 262.719

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 141baff1d

Time (s): cpu = 00:01:49 ; elapsed = 00:01:10 . Memory (MB): peak = 2536.898 ; gain = 262.719

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 1a9dc014b

Time (s): cpu = 00:01:49 ; elapsed = 00:01:11 . Memory (MB): peak = 2536.898 ; gain = 262.719

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.030 . Memory (MB): peak = 2536.898 ; gain = 0.000
Phase 4.4 Final Placement Cleanup | Checksum: 1038111c5

Time (s): cpu = 00:01:50 ; elapsed = 00:01:12 . Memory (MB): peak = 2536.898 ; gain = 262.719
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1038111c5

Time (s): cpu = 00:01:51 ; elapsed = 00:01:12 . Memory (MB): peak = 2536.898 ; gain = 262.719
Ending Placer Task | Checksum: 100dac07f

Time (s): cpu = 00:01:51 ; elapsed = 00:01:12 . Memory (MB): peak = 2536.898 ; gain = 262.719
INFO: [Common 17-83] Releasing license: Implementation
81 Infos, 5 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:58 ; elapsed = 00:01:17 . Memory (MB): peak = 2536.898 ; gain = 298.340
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:10 ; elapsed = 00:00:03 . Memory (MB): peak = 2536.898 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:09 . Memory (MB): peak = 2536.898 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file CPE_Wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.031 . Memory (MB): peak = 2536.898 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file CPE_Wrapper_utilization_placed.rpt -pb CPE_Wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file CPE_Wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.123 . Memory (MB): peak = 2536.898 ; gain = 0.000
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
90 Infos, 5 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:13 ; elapsed = 00:00:08 . Memory (MB): peak = 2536.898 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:10 ; elapsed = 00:00:03 . Memory (MB): peak = 2554.844 ; gain = 17.945
INFO: [Common 17-1381] The checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:09 . Memory (MB): peak = 2554.844 ; gain = 17.945
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 8daf959a ConstDB: 0 ShapeSum: b0a28b7 RouteDB: 6821022e

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 7ffa7103

Time (s): cpu = 00:01:03 ; elapsed = 00:00:32 . Memory (MB): peak = 2617.102 ; gain = 47.105
Post Restoration Checksum: NetGraph: 47a73a6b NumContArr: 754afc56 Constraints: 756a04c Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: c448d70d

Time (s): cpu = 00:01:04 ; elapsed = 00:00:34 . Memory (MB): peak = 2617.102 ; gain = 47.105

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: c448d70d

Time (s): cpu = 00:01:05 ; elapsed = 00:00:34 . Memory (MB): peak = 2621.367 ; gain = 51.371

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: c448d70d

Time (s): cpu = 00:01:05 ; elapsed = 00:00:34 . Memory (MB): peak = 2621.367 ; gain = 51.371
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 1e3bdb3c7

Time (s): cpu = 00:01:21 ; elapsed = 00:00:45 . Memory (MB): peak = 2656.008 ; gain = 86.012
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.286  | TNS=0.000  | WHS=-0.221 | THS=-394.134|


Phase 2.5 Update Timing for Bus Skew

Phase 2.5.1 Update Timing
Phase 2.5.1 Update Timing | Checksum: 21e9504cc

Time (s): cpu = 00:01:31 ; elapsed = 00:00:52 . Memory (MB): peak = 2766.508 ; gain = 196.512
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.286  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 2.5 Update Timing for Bus Skew | Checksum: 1fb9555a9

Time (s): cpu = 00:01:32 ; elapsed = 00:00:52 . Memory (MB): peak = 2766.508 ; gain = 196.512
Phase 2 Router Initialization | Checksum: 17c4259f2

Time (s): cpu = 00:01:32 ; elapsed = 00:00:52 . Memory (MB): peak = 2766.508 ; gain = 196.512

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 2088
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 2047
  Number of Partially Routed Nets     = 41
  Number of Node Overlaps             = 0


Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 219cf79de

Time (s): cpu = 00:01:32 ; elapsed = 00:00:53 . Memory (MB): peak = 2766.508 ; gain = 196.512

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 99
 Number of Nodes with overlaps = 31
 Number of Nodes with overlaps = 6
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.091  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 1490af700

Time (s): cpu = 00:01:43 ; elapsed = 00:01:01 . Memory (MB): peak = 2766.508 ; gain = 196.512
Phase 4 Rip-up And Reroute | Checksum: 1490af700

Time (s): cpu = 00:01:43 ; elapsed = 00:01:01 . Memory (MB): peak = 2766.508 ; gain = 196.512

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 1d284f6d2

Time (s): cpu = 00:01:48 ; elapsed = 00:01:05 . Memory (MB): peak = 2766.508 ; gain = 196.512
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.105  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 5.1 Delay CleanUp | Checksum: 11cb18bd0

Time (s): cpu = 00:01:48 ; elapsed = 00:01:05 . Memory (MB): peak = 2766.508 ; gain = 196.512

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 11cb18bd0

Time (s): cpu = 00:01:48 ; elapsed = 00:01:05 . Memory (MB): peak = 2766.508 ; gain = 196.512
Phase 5 Delay and Skew Optimization | Checksum: 11cb18bd0

Time (s): cpu = 00:01:48 ; elapsed = 00:01:05 . Memory (MB): peak = 2766.508 ; gain = 196.512

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 16f791b7f

Time (s): cpu = 00:01:53 ; elapsed = 00:01:09 . Memory (MB): peak = 2766.508 ; gain = 196.512
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.105  | TNS=0.000  | WHS=0.024  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 1c5f06d08

Time (s): cpu = 00:01:53 ; elapsed = 00:01:09 . Memory (MB): peak = 2766.508 ; gain = 196.512
Phase 6 Post Hold Fix | Checksum: 1c5f06d08

Time (s): cpu = 00:01:53 ; elapsed = 00:01:09 . Memory (MB): peak = 2766.508 ; gain = 196.512

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 0.46588 %
  Global Horizontal Routing Utilization  = 0.435429 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1fc9f23ae

Time (s): cpu = 00:01:53 ; elapsed = 00:01:09 . Memory (MB): peak = 2766.508 ; gain = 196.512

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1fc9f23ae

Time (s): cpu = 00:01:53 ; elapsed = 00:01:09 . Memory (MB): peak = 2766.508 ; gain = 196.512

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 23490b6eb

Time (s): cpu = 00:01:57 ; elapsed = 00:01:13 . Memory (MB): peak = 2766.508 ; gain = 196.512

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.105  | TNS=0.000  | WHS=0.024  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 23490b6eb

Time (s): cpu = 00:01:57 ; elapsed = 00:01:14 . Memory (MB): peak = 2766.508 ; gain = 196.512
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:02:03 ; elapsed = 00:01:20 . Memory (MB): peak = 2766.508 ; gain = 196.512

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
106 Infos, 5 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:02:09 ; elapsed = 00:01:23 . Memory (MB): peak = 2766.508 ; gain = 211.664
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:11 ; elapsed = 00:00:03 . Memory (MB): peak = 2766.508 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:09 . Memory (MB): peak = 2766.508 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file CPE_Wrapper_drc_routed.rpt -pb CPE_Wrapper_drc_routed.pb -rpx CPE_Wrapper_drc_routed.rpx
Command: report_drc -file CPE_Wrapper_drc_routed.rpt -pb CPE_Wrapper_drc_routed.pb -rpx CPE_Wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:10 ; elapsed = 00:00:05 . Memory (MB): peak = 2766.508 ; gain = 0.000
INFO: [runtcl-4] Executing : report_methodology -file CPE_Wrapper_methodology_drc_routed.rpt -pb CPE_Wrapper_methodology_drc_routed.pb -rpx CPE_Wrapper_methodology_drc_routed.rpx
Command: report_methodology -file CPE_Wrapper_methodology_drc_routed.rpt -pb CPE_Wrapper_methodology_drc_routed.pb -rpx CPE_Wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:22 ; elapsed = 00:00:13 . Memory (MB): peak = 2889.648 ; gain = 123.141
INFO: [runtcl-4] Executing : report_power -file CPE_Wrapper_power_routed.rpt -pb CPE_Wrapper_power_summary_routed.pb -rpx CPE_Wrapper_power_routed.rpx
Command: report_power -file CPE_Wrapper_power_routed.rpt -pb CPE_Wrapper_power_summary_routed.pb -rpx CPE_Wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
WARNING: [Power 33-332] Found switching activity that implies high-fanout reset nets being asserted for excessive periods of time which may result in inaccurate power analysis.
Resolution: To review and fix problems, please run Power Constraints Advisor in the GUI from Tools > Power Constraints Advisor or run report_power with the -advisory option to generate a text report.
118 Infos, 6 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:15 ; elapsed = 00:00:08 . Memory (MB): peak = 2903.664 ; gain = 14.016
INFO: [runtcl-4] Executing : report_route_status -file CPE_Wrapper_route_status.rpt -pb CPE_Wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file CPE_Wrapper_timing_summary_routed.rpt -pb CPE_Wrapper_timing_summary_routed.pb -rpx CPE_Wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
WARNING: [Timing 38-436] There are set_bus_skew constraint(s) in this design. Please run report_bus_skew to ensure that bus skew requirements are met.
INFO: [runtcl-4] Executing : report_incremental_reuse -file CPE_Wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file CPE_Wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file CPE_Wrapper_bus_skew_routed.rpt -pb CPE_Wrapper_bus_skew_routed.pb -rpx CPE_Wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.827 . Memory (MB): peak = 2903.664 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/genblk1_0_.ma_ma_int_16_routed.dcp' has been generated.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.729 . Memory (MB): peak = 2903.664 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/genblk1_1_.ma_ma_int_16_routed.dcp' has been generated.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.762 . Memory (MB): peak = 2903.664 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/genblk1_2_.ma_ma_int_16_routed.dcp' has been generated.
INFO: [Common 17-206] Exiting Vivado at Sat Mar 20 20:16:14 2021...

*** Running vivado
    with args -log CPE_Wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source CPE_Wrapper.tcl -notrace



****** Vivado v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:49 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source CPE_Wrapper.tcl -notrace
Command: pr_verify -full_check -initial C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed.dcp -additional C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_routed.dcp -file child_0_impl_1_pr_verify.log
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:02 . Memory (MB): peak = 1080.156 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 2317 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Constraints 18-5170] The checkpoint was created with non-default parameter values which do not match the current Vivado settings.  Mismatching parameters are:
  tcl.collectionResultDisplayLimit
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1908.410 ; gain = 19.969
Restored from archive | CPU: 3.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1908.410 ; gain = 19.969
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.032 . Memory (MB): peak = 1908.410 ; gain = 0.000
INFO: [Project 1-604] Checkpoint was created with Vivado v2020.1 (64-bit) build 2902540
INFO: [Vivado 12-3501] pr_verify C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed.dcp C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_routed.dcp
Netlist sorting complete. Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2084.188 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 2119 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2538.984 ; gain = 33.500
Restored from archive | CPU: 3.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2538.984 ; gain = 33.500
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.029 . Memory (MB): peak = 2538.984 ; gain = 0.000
INFO: [Project 1-604] Checkpoint was created with Vivado v2020.1 (64-bit) build 2902540
INFO: [Constraints 18-1020] PR Verify Summary:
DCP1: C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed.dcp
  Number of reconfigurable modules compared = 3
  Number of partition pins compared         = 1797
  Number of static tiles compared           = 3742
  Number of static sites compared           = 7523
  Number of static cells compared           = 47609
  Number of static routed nodes compared    = 525915
  Number of static routed pips compared     = 487546

DCP2: C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_routed.dcp
  Number of reconfigurable modules compared = 3
  Number of partition pins compared         = 1797
  Number of static tiles compared           = 3742
  Number of static sites compared           = 7523
  Number of static cells compared           = 47609
  Number of static routed nodes compared    = 525915
  Number of static routed pips compared     = 487546
INFO: [Vivado 12-3253] PR_VERIFY: check points C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/impl_1/CPE_Wrapper_routed.dcp and C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/CPE_Wrapper_routed.dcp are compatible
pr_verify: Time (s): cpu = 00:00:56 ; elapsed = 00:00:59 . Memory (MB): peak = 2697.328 ; gain = 1617.172
Command: open_checkpoint CPE_Wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2697.328 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2697.328 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 2119 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2697.328 ; gain = 0.000
Restored from archive | CPU: 3.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2697.328 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.029 . Memory (MB): peak = 2697.328 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 796 instances were transformed.
  CFGLUT5 => CFGLUT5 (SRL16E, SRLC32E): 564 instances
  RAM16X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM16X1S => RAM32X1S (RAMS32): 81 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 150 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2020.1 (64-bit) build 2902540
open_checkpoint: Time (s): cpu = 00:00:17 ; elapsed = 00:00:18 . Memory (MB): peak = 2697.328 ; gain = 0.000
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s02_nodes/s02_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/smartconnect_1/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/i_bs_fifo/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/blk_id_fifo.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/dfx_controller_0/U0/i_cp0/blk_id_fifo.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to auto. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-208] The XPM instance: <BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <BD_Wrapper/Convolution_Controller_i/axi_dma_0>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <BD_Wrapper/Convolution_Controller_i/axi_dma_0>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
Command: write_bitstream -force -no_partial_bitfile CPE_Wrapper.bit -bin_file
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2020.1/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDRC-61] SLICEM_5lutO5_C5: Dangling output pin O5 on site SLICE_X94Y90:C5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC PDRC-62] SLICEM_5lutO5_B5: Dangling output pin O5 on site SLICE_X94Y90:B5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC RTSTAT-10] No routable loads: 114 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], genblk1[2].ma/Convolution_Processor/adder/finalAccumulate[19:0], genblk1[1].ma/Convolution_Processor/adder/finalAccumulate[19:0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m03_nodes/m03_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_aw_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m02_nodes/m02_aw_node/inst/mi_handler_m_sc_areset_pipe... and (the first 15 of 74 listed).
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 84 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
Partition "pblock_genblk1[0].ma" Reconfigurable Module "genblk1[0].ma"
Partition "pblock_genblk1[1].ma" Reconfigurable Module "genblk1[1].ma"
Partition "pblock_genblk1[2].ma" Reconfigurable Module "genblk1[2].ma"
INFO: [Vivado 12-4752] Design contains reconfigurable partitions, but no partial bit files will be generated since -no_partial_bitfile option was specified.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./CPE_Wrapper.bit...
Writing bitstream ./CPE_Wrapper.bin...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Sat Mar 20 20:37:26 2021. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2020.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
69 Infos, 84 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:55 ; elapsed = 00:00:46 . Memory (MB): peak = 2697.328 ; gain = 0.000
Command: write_bitstream -force -cell {genblk1[0].ma} genblk1_0_.ma_ma_int_16_partial.bit -bin_file
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDRC-61] SLICEM_5lutO5_C5: Dangling output pin O5 on site SLICE_X94Y90:C5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC PDRC-62] SLICEM_5lutO5_B5: Dangling output pin O5 on site SLICE_X94Y90:B5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC RTSTAT-10] No routable loads: 114 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], genblk1[2].ma/Convolution_Processor/adder/finalAccumulate[19:0], genblk1[1].ma/Convolution_Processor/adder/finalAccumulate[19:0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m03_nodes/m03_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_aw_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m02_nodes/m02_aw_node/inst/mi_handler_m_sc_areset_pipe... and (the first 15 of 74 listed).
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 84 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
Partition "pblock_genblk1[0].ma" Reconfigurable Module "genblk1[0].ma"
Partition "pblock_genblk1[1].ma" Reconfigurable Module "genblk1[1].ma"
Partition "pblock_genblk1[2].ma" Reconfigurable Module "genblk1[2].ma"
INFO: [Vivado 12-4077] No full design bitstream will be created with the use of the -cell option.
Process Partition "pblock_genblk1[0].ma"
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Partial bitstream contains 3635584 bits.
Writing bitstream ./genblk1_0_.ma_ma_int_16_partial.bit...
Writing bitstream ./genblk1_0_.ma_ma_int_16_partial.bin...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Sat Mar 20 20:38:32 2021. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2020.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
82 Infos, 168 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:08 ; elapsed = 00:01:06 . Memory (MB): peak = 2697.328 ; gain = 0.000
Command: write_bitstream -force -cell {genblk1[1].ma} genblk1_1_.ma_ma_int_16_partial.bit -bin_file
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDRC-61] SLICEM_5lutO5_C5: Dangling output pin O5 on site SLICE_X94Y90:C5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC PDRC-62] SLICEM_5lutO5_B5: Dangling output pin O5 on site SLICE_X94Y90:B5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC RTSTAT-10] No routable loads: 114 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], genblk1[2].ma/Convolution_Processor/adder/finalAccumulate[19:0], genblk1[1].ma/Convolution_Processor/adder/finalAccumulate[19:0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m03_nodes/m03_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_aw_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m02_nodes/m02_aw_node/inst/mi_handler_m_sc_areset_pipe... and (the first 15 of 74 listed).
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 84 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
Partition "pblock_genblk1[0].ma" Reconfigurable Module "genblk1[0].ma"
Partition "pblock_genblk1[1].ma" Reconfigurable Module "genblk1[1].ma"
Partition "pblock_genblk1[2].ma" Reconfigurable Module "genblk1[2].ma"
INFO: [Vivado 12-4077] No full design bitstream will be created with the use of the -cell option.
Process Partition "pblock_genblk1[1].ma"
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Partial bitstream contains 1766976 bits.
Writing bitstream ./genblk1_1_.ma_ma_int_16_partial.bit...
Writing bitstream ./genblk1_1_.ma_ma_int_16_partial.bin...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/GitHub/ReconHardware/FPGA_Files/Projects/ConvolutionAccel_d/ConvolutionAccel_d.runs/child_0_impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Sat Mar 20 20:39:56 2021. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2020.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
95 Infos, 252 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:27 ; elapsed = 00:01:24 . Memory (MB): peak = 2697.328 ; gain = 0.000
Command: write_bitstream -force -cell {genblk1[2].ma} genblk1_2_.ma_ma_int_16_partial.bit -bin_file
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg input genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[0].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[1].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[0].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[1].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[2].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[3].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[4].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[5].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[6].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[7].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg multiplier stage genblk1[2].ma/Convolution_Processor/genblk1[8].inputMulti/product_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDRC-61] SLICEM_5lutO5_C5: Dangling output pin O5 on site SLICE_X94Y90:C5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC PDRC-62] SLICEM_5lutO5_B5: Dangling output pin O5 on site SLICE_X94Y90:B5LUT. For this programming the O5 output pin should have a signal.
WARNING: [DRC RTSTAT-10] No routable loads: 114 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], genblk1[2].ma/Convolution_Processor/adder/finalAccumulate[19:0], genblk1[1].ma/Convolution_Processor/adder/finalAccumulate[19:0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m03_nodes/m03_b_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_aw_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_r_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/s00_nodes/s00_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m01_nodes/m01_w_node/inst/mi_handler_m_sc_areset_pipe, BD_Wrapper/Convolution_Controller_i/smartconnect_0/inst/m02_nodes/m02_aw_node/inst/mi_handler_m_sc_areset_pipe... and (the first 15 of 74 listed).
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (BD_Wrapper/Convolution_Controller_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 84 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
Partition "pblock_genblk1[0].ma" Reconfigurable Module "genblk1[0].ma"
Partition "pblock_genblk1[1].ma" Reconfigurable Module "genblk1[1].ma"
Partition "pblock_genblk1[2].ma" Reconfigurable Module "genblk1[2].ma"
INFO: [Vivado 12-4077] No full design bitstream will be created with the use of the -cell option.
Process Partition "pblock_genblk1[2].ma"
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Partial bitstream contains 1766976 bits.
Writing bitstream ./genblk1_2_.ma_ma_int_16_partial.bit...
Writing bitstream ./genblk1_2_.ma_ma_int_16_partial.bin...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
