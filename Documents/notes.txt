#
#   z means not complete
#   x means complete
#   - are notes
#

2/8/21
-------
 x send omar the pynq jupyter-notebook
 x Implement simple PR with LED
 x Change Figure 1 to be smaller
 x Focus on performance discussion
 x Look at adam's JN for insight on triggering PR
   - Adams notebook code structure does not work for me.

 x Performance Metrics
   - frames per second
   - Multiplier latency (simulation), help determine many frequencies
   - Eventually determine reconfiguration time


2/9/21
-------
 z Revise the abstract before thursday
 x Revise introduction to begin more abstract(don't jump directly into CNNs)

 Notes on Completing DFX
 --------
 z PG374 stuck on page 66 step 4
   - source [get_property REPOSITORY [get_ipdefs *dfx_controller:1.0]]/xilinx/dfx_controller_v1_0/tcl/api.tcl -notrace 
   - set config [get_property CONFIG.ALL_PARAMS [get_ips design_1_dfx_controller_0_0]]
   - set dscr [dfx_controller_v1_0::netlist::get_descriptor $config BD/design_1_i/dfx_controller_0/U0]
   - At step 4 the design references an example script. This script assumes some bitstream files are already in memory.
      I'm not really sure how to do this. UG947 has some scripts for setting up the dfx but sourcing the tcl script doen't
      seem to import the functions and running them sequentially also doesn't work.
   - Testing out Vitis to see if I can do the memory stuff there
  
 z Kasem suggests storing the partial bistreams statically into main memory. After reading around, the DFX controller is capable of interacting 
   with any memory device that uses AXI. This means something like the AXI EMC or MIG would be plausible for accessing memory.
   - https://trello.com/c/ldO6sjk3

 z UG947 lab 7 seems very informative. It seems the QSPI can be configured to load a specific bitstream onto FPGA 